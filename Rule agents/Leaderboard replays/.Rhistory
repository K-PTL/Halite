# Load required libraries
library(quantmod)
installed.packages("quantmod")
install.packages("quantmod")
# Load required libraries
library(quantmod)
quantmod::
?as.Date()
?as.Date
?as.Date
source('~/R/Currency exchange/simulation.R')
source('~/R/Currency exchange/simulation.R')
source('~/R/Currency exchange/simulation.R')
source('~/R/Currency exchange/simulation.R')
source('~/R/Currency exchange/simulation.R')
source('~/R/Currency exchange/simulation.R')
obj.names
numeric(length(obj.names))
16000+4000
(16+4+18*1.14)
(16+4+18*1.14+0*0.86)
(16+4+18*1.14+29*0.86)
(16+4+28*1.14+29*0.86)
(16+4+18*1.14+29*0.86)
(16+4+1+18*1.14+29*0.86)
75-(16+4+1+18*1.14+29*0.86)
shiny::runApp('EC/R/Exploratory data analysis/Shiny - inspect series')
shiny::runApp('EC/R/Exploratory data analysis/Shiny - inspect series')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
2**(-1/2)
(1+2**(2*0))
(1+2**(2*n))**(-1/2)
(1+2**(2*0))**(-1/2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
sqrt(prev_x**2+(1-prev_y**2))
prev_x
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
installed.packages(yaml)
installed.packages("yaml")
library(xgboost)
update.packages(ask = FALSE)
update.packages(ask = FALSE)
library(tidyr)
library(xgboost)
library(shiny)
install.packages("shiny")
install.packages("htmltools")
install.packages("shiny")
source('~/.active-rstudio-document')
source('~/Kaggle/LANL/Logic/analyse_gap_preds.R')
mean(data)
data[1:5,1:5]
predictions <- as.matrix(data)
mean(predictions)
mean(predictions > 0.5)
sum(predictions > 0.5)
confident_gaps <- which(predictions > 0.5)
data[77240,1]
data[138165,1]
confident_gap_ids <- which(predictions > 0.5)
confident_cols <- ceiling((confident_gap_ids-1)/150000)
confident_rows <- confident_gap_ids - (confident_cols-1)*150000
table(confident_rows)
table(sort(confident_rows))
max(confident_cols)
max(confident_rows)
which(confident_rows==150001)
confident_gap_ids[620]
confident_cols[620]
36150001/150000
confident_cols <- ceiling((confident_gap_ids-0.5)/150000)
confident_rows <- confident_gap_ids - (confident_cols-1)*150000
max(confident_rows)
min(confident_rows)
min(confident_cols)
max(confident_cols)
predictions <- as.matrix(data)
confident_gap_ids <- which(predictions > 0.5)
confident_cols <- ceiling((confident_gap_ids-0.5)/150000)
confident_rows <- confident_gap_ids - (confident_cols-1)*150000
confident_rows[620]
num_files <- ncol(data)
num_obs <- nrow(data)
predictions <- as.matrix(data)
confident_gap_ids <- which(predictions > 0.5)
confident_cols <- ceiling((confident_gap_ids-0.5)/num_obs)
confident_rows <- confident_gap_ids - (confident_cols-1)*num_obs
for(file_id in 1:num_obs){
confident_ids <- which(confident_cols == file_id)
cat(confident_ids)
}
for(file_id in 1:num_obs){
confident_ids <- which(confident_cols == file_id)
cat(confident_ids, "\n")
}
for(file_id in 1:num_files){
confident_ids <- which(confident_cols == file_id)
cat(confident_ids, "\n")
}
for(file_id in 1:num_files){
confident_ids <- which(confident_cols == file_id)
cat(confident_rows[confident_ids], "\n")
}
7 %% 2
for(file_id in 1:num_files){
confident_ids <- which(confident_cols == file_id)
cat("File:", file_id, confident_rows[confident_ids] %% 4096, "\n")
}
confident_limit <- 0.99
num_files <- ncol(data)
num_obs <- nrow(data)
predictions <- as.matrix(data)
confident_gap_ids <- which(predictions > confident_limit)
confident_cols <- ceiling((confident_gap_ids-0.5)/num_obs)
confident_rows <- confident_gap_ids - (confident_cols-1)*num_obs
for(file_id in 1:num_files){
confident_ids <- which(confident_cols == file_id)
cat("File:", file_id, confident_rows[confident_ids] %% 4096, "\n")
}
all_confident_mods <- vector(mode="character", length=num_files)
all_confident_mods <- vector(mode="character", length=num_files)
for(file_id in 1:num_files){
confident_ids <- which(confident_cols == file_id)
mod_ids <- confident_rows[confident_ids] %% 4096
cat("File:", file_id, mod_ids, "\n")
all_confident_mods[file_id] <- paste(mod_ids)
}
all_confident_mods <- vector(mode="character", length=num_files)
for(file_id in 1:num_files){
confident_ids <- which(confident_cols == file_id)
mod_ids <- confident_rows[confident_ids] %% 4096
cat("File:", file_id, mod_ids, "\n")
if(length(mod_ids) > 0){all_confident_mods[file_id] <- paste(mod_ids)}
}
warnings()
paste(mod_ids)
View(all_confident_mods)
all_confident_mods <- vector(mode="character", length=num_files)
for(file_id in 1:num_files){
confident_ids <- which(confident_cols == file_id)
mod_ids <- confident_rows[confident_ids] %% 4096
cat("File:", file_id, mod_ids, "\n")
if(length(mod_ids) > 0){all_confident_mods[file_id] <- paste(mod_ids,
collapse=", ")}
}
View(all_confident_mods)
confident_limit <- 0.999
num_files <- ncol(data)
num_obs <- nrow(data)
predictions <- as.matrix(data)
confident_gap_ids <- which(predictions > confident_limit)
confident_cols <- ceiling((confident_gap_ids-0.5)/num_obs)
confident_rows <- confident_gap_ids - (confident_cols-1)*num_obs
all_confident_mods <- vector(mode="character", length=num_files)
for(file_id in 1:num_files){
confident_ids <- which(confident_cols == file_id)
mod_ids <- confident_rows[confident_ids] %% 4096
cat("File:", file_id, mod_ids, "\n")
if(length(mod_ids) > 0){
all_confident_mods[file_id] <- paste(mod_ids, collapse=", ")
}
}
View(all_confident_mods)
setwd("~/Kaggle/Halite/Rule agents/Leaderboard replays")
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
View(data)
View(data)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
print(fig)
View(data)
fig <- plot_ly(data, x=~game_id, y=~score, color=~team_name, mode="lines")
print(fig)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
View(data)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
View(data)
data[score == 600, score] := NA
data[score == 600]
data[score == 600, score]
data[score == 600, score] = NA
data[score == 600][["score"]] = NA
data[score == 600, score := NA]
View(data)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
View(data)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
data[, best_score=max(score), submisison_id]
data <- data[, best_score=max(score), submisison_id]
data[, best_score=max(score), submisison_id]
data <- data[, .(best_score=max(score)), submisison_id]
View(data)
data <- data[, .(best_score=max(score)), "submisison_id"]
data <- data[, best_score:=max(score), submisison_id]
colnames(data)
data <- data[, best_score:=max(score), submission_id]
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
View(data)
data <- data[, best_score:=max(score, na.rm = TRUE), submission_id]
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
install.packages("rmarkdown")
install.packages("knitr")
update.packages(ask = FALSE)
install.packages("knitr")
install.packages("rmarkdown")
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
View(data)
View(data)
fig <- plot_ly(data, x=~game_id, y=~score, color=~team_name, mode="lines")
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
View(data)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
View(data)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
View(data)
data[team_name == team & game_id == 0]
np.sort(last_scores$score)
sort(last_scores$score)
q
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
keep_submission_ids
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
keep_idstable(keep_ids)
table(keep_ids)
table(keep_ids)
table(keep_ids)
team
unique_team_names
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
View(last_scores)
View(last_scores)
sort(
last_scores$score, decreasing=TRUE)[17]
sort(
last_scores$score, decreasing=TRUE)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
table(keep_ids)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
keep_ids
table(keep_ids)
table(keep_ids)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
table(keep_ids)
table(keep_ids)
table(keep_ids)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
keep_ids
table(keep_ids)
traceback
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
table(keep_ids)
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
data <- data[[keep_ids]]
keep_ids
data <- data[keep_ids]
source('~/Kaggle/Halite/Rule agents/Leaderboard replays/Raine Force comparison plot.R')
